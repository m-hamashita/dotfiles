// 既定値を上書きするには、このファイル内にキー バインドを挿入しますauto[]
[
    {
        "key": "alt+r",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+z",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+z",
        "command": "workbench.action.terminal.focus",
        "when": "editorFocus"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "key": "ctrl+t",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+t",
        "command": "-vscode-neovim.send",
        "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
    },
    {
        "key": "ctrl+t",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+t",
        "command": "-editor.action.transposeLetters",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "s",
        "command": "extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "workbench.action.createTerminalEditor"
    },
    {
        "key": "ctrl+t ctrl+t",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+f ctrl+v",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+h",
        "command": "-git.viewFileHistory"
    },
    {
        "key": "alt+h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "alt+h",
        "command": "-testing.toggleTestingPeekHistory",
        "when": "testing.isPeekVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.nextEditor",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.previousEditor",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "space f",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!terminalFocus && vim.mode == 'Normal'&&editorTextFocus"
    },
    {
        "key": "ctrl+f ctrl+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+o",
        "command": "-lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile"
    },
    {
        "key": "shift+cmd+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "shift+cmd+n",
        "command": "explorer.newFolder"
    },
    {
        "key": "shift+k",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+k",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "cmd+enter",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+d",
        "command": "-extension.vim_cmd+d",
        "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
    }
]
