[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-scripts/wombat256.vim'

[[plugins]]
repo = 'luochen1990/rainbow'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ],
      \             [ 'vista' ],
      \           ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'vista': 'NearestMethodOrFunction',
      \ },
      \ }
function! NearestMethodOrFunction() abort
  return get(b:, 'vista_nearest_method_or_function', '')
endfunction
'''

[[plugins]]
repo = 'dense-analysis/ale'

[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'fatih/vim-go'

[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
hook_add = '''
let coc#util#get_data_home = '~/.config/coc'
'''

[[plugins]]
repo = 'mengelbrecht/lightline-bufferline'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'machakann/vim-highlightedyank'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_start_key = '<C-q>'
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'liuchengxu/vista.vim'
depends = ['coc.nvim', 'lightline.vim']
hook_add = '''
  nmap <silent> <C-f><C-v> :<C-u>Vista<CR>
  nmap <silent> <C-f><C-s> :<C-u>Vista finder coc<CR>
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
nnoremap <silent><C-p> :<C-u>Deol -split=floating<CR>
tnoremap <silent>jj   <C-\><C-n>
'''

[[plugins]]
repo = 'vim-scripts/dbext.vim'

[[plugins]]
repo = 'kana/vim-altercmd'
hook_add = '''
	call altercmd#load()
	AlterCommand tmux Tmux
	AlterCommand work Work
	AlterCommand cheat Cheat
	AlterCommand shell Shell
	AlterCommand prog Prog
	AlterCommand goal Goal
	AlterCommand todo Todo
	AlterCommand path Path
	AlterCommand refresh Refresh
'''

# neovim terminal plugin
[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
	let g:neoterm_autoinsert = 1
	let g:neoterm_autoscroll = 1
	" # let g:neoterm_split_on_tnew = 1
	let g:neoterm_default_mod = "belowright"

	function! NTermInNewTab()
		let l:tmp = g:neoterm_default_mod
		let g:neoterm_default_mod = "tab"
		Tnew
		let g:neoterm_default_mod = l:tmp
	endfunction

	function! NTermCurrentDir()
		let l:cmd = "cd " .expand("%:p:h")
		call neoterm#exec({ 'cmd': [ cmd , '' ] })
		Topen
	endfunction

	function! NTermPython( ... )
		if expand("%:e") != 'py'
			echo '[error] Invalid file extension.'
			return
		endif
		let l:cmd = "python " .expand("%:p")
		for arg in a:000
			let l:cmd = l:cmd . " " . arg
			"let l:cmd.cmd = [ l:cmd.cmd, arg ]
		endfor
		call neoterm#exec({ 'cmd': [ cmd ] })
		"T python l:cmd
		Topen
	endfunction


	function! GitPush( comment )
		let l:cmd = "cd " .expand("%:p:h")
		let l:cmd = l:cmd . " && source ~/.config/nvim/scripts/GitPush.sh " . a:comment
		call neoterm#exec({ 'cmd': [ cmd , '' ] })
		Topen
	endfunction

	function! UpdateConfig()
		let l:cmd = "cd ~/.config/nvim"
		let l:cmd = l:cmd . " && git pull"
		call neoterm#exec({ 'cmd': [ cmd , '' ] })
		Topen
		" execute "source ~/.config/nvim/init.vim"
	endfunction

	function! NTermMulti( v_num, h_num )
		let l:tmp = g:neoterm_default_mod
		let g:neoterm_default_mod = "tab"
		Tnew
		" # vertical split
		let g:neoterm_default_mod = "vertical"
		for i in range( a:h_num - 1 )
			Tnew
		endfor
		" # holizontal split
		let g:neoterm_default_mod = "aboveleft"
		for i in range( a:h_num )
			for i in range( a:v_num - 1 )
				Tnew
			endfor
			" # move to left window
			execute "winc l"
		endfor
		" # move to top-left window
		execute "winc t"
		let g:neoterm_default_mod = l:tmp
	endfunction

	function! NTermHolizontalSplit()
		let l:tmp = g:neoterm_default_mod
		let g:neoterm_default_mod = "aboveleft"
		Tnew
		let g:neoterm_default_mod = l:tmp
	endfunction

	function! NTermVerticalSplit()
		let l:tmp = g:neoterm_default_mod
		let g:neoterm_default_mod = "vertical"
		Tnew
		let g:neoterm_default_mod = l:tmp
	endfunction

	nnoremap <silent> <c-t><c-t> :Ttoggle<CR>
	tnoremap <silent> <c-t><c-t> <C-\><C-n>:Ttoggle<CR>
	nnoremap <c-t><c-h> :call NTermHolizontalSplit()<CR>
	nnoremap <c-t><c-v> :call NTermVerticalSplit()<CR>

	command! CMake                call NTermCMake()
	command! CatkinMake           call NTermCatkinMake()
	command! -nargs=* Python      call NTermPython(<f-args>)
	"command! -nargs=* Python      :T python %:p <f-args>
	command! TexCompile           call NTermTexCompile()
	command! UpdateConfig         call UpdateConfig()
	command! -nargs=1 GitPush     call GitPush(<f-args>)
	command! -nargs=+ NTermMulti  call NTermMulti(<f-args>)
	command! NTermMulti4          call NTermMulti(2,2)
	command! NTermMulti6          call NTermMulti(3,2)
	command! NTermMulti8          call NTermMulti(4,2)
'''

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
nmap p <Plug>(yankround-p)
xmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap gp <Plug>(yankround-gp)
xmap gp <Plug>(yankround-gp)
nmap gP <Plug>(yankround-gP)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)
'''

[[plugins]]
repo = 'skanehira/getpr.vim'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'Shougo/defx.nvim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'kristijanhusak/defx-git'

[[plugins]]
repo = 'skanehira/preview-markdown.vim'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'dbgx/lldb.nvim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'hashivim/vim-terraform'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'

[[plugins]]
repo = 'skanehira/translate.vim'

[[plugins]]
repo = 'dag/vim-fish'

[[plugins]]
repo = 'rust-lang/rust.vim'
hook_add = '''
    let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'

[[plugins]]
repo = 'fannheyward/telescope-coc.nvim'

[[plugins]]
repo = "tyru/caw.vim.git"
hook_add = '''
          nmap , <Plug>(caw:hatpos:toggle)
          vmap , <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = "nathanaelkane/vim-indent-guides"

[[plugins]]
repo = "tpope/vim-surround"

[[plugins]]
repo = "sjl/gundo.vim"
