[[plugins]]
repo = 'Shougo/dein.vim'

# save session (use with tmux)
[[plugins]]
repo = 'tpope/vim-obsession'

# highlight yanked region
[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
    let g:highlightedyank_highlight_duration = 300
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
nnoremap <silent><C-p> :<C-u>Deol -split=floating<CR>
'''

[[plugins]]
repo = 'dbgx/lldb.nvim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'skanehira/translate.vim'

[[plugins]]
repo = 'nvim-lua/popup.nvim'
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

# ecosystem plugin using deno
[[plugins]]
repo = "vim-denops/denops.vim"

# support open new tab
[[plugins]]
repo = "lambdalisue/guise.vim"

[[plugins]]
repo = 'camspiers/snap'

[[plugins]]
repo = 'ibhagwan/fzf-lua'
[[plugins]]
repo = 'vijaymarupudi/nvim-fzf'
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

# code screenshot
[[plugins]]
repo = 'skanehira/denops-germanium.vim'

[[plugins]]
repo = 'machakann/vim-sandwich'
[[plugins]]
repo = "tpope/vim-surround"

[[plugins]]
repo = 'gelguy/wilder.nvim'
[[plugins]]
repo = 'roxma/nvim-yarp'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

# rust-tools
[[plugins]]
repo = 'simrat39/rust-tools.nvim'
[[plugins]]
repo = 'mfussenegger/nvim-dap'

[[plugins]]
repo = 'levouh/tint.nvim'

# file explorer
[[plugins]]
repo = 'Shougo/defx.nvim'
[[plugins]]
repo = 'ryanoasis/vim-devicons'
[[plugins]]
repo = 'kristijanhusak/defx-icons'
[[plugins]]
repo = 'kristijanhusak/defx-git'

# language server manager
[[plugins]]
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
hook_add = '''
    let coc#util#get_data_home = '~/.config/coc'
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'VimEnter'
[[plugins]]
repo = 'SmiteshP/nvim-navic'
on_event = 'VimEnter'
hook_source = '''
" TODO: coc から lspconfig(mason) に移行する
lua <<EOF
  local lsp_flags = {
    -- This is the default in Nvim 0.7+
    debounce_text_changes = 150,
  }
  -- nvim-navic
  local navic = require("nvim-navic")
  require("lspconfig").clangd.setup {
      on_attach = function(client, bufnr)
          navic.attach(client, bufnr)
      end
  }
  -- require("lspconfig").rust_analyzer.setup {
  --     on_attach = on_attach,
  --     flags = lsp_flags,
  -- }
EOF
'''

[[plugins]]
repo = 'williamboman/mason.nvim'
[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'

[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'

[[plugins]]
repo = 'lvimuser/lsp-inlayhints.nvim'
[[plugins]]
repo = "hrsh7th/nvim-cmp"
[[plugins]]
repo = "hrsh7th/cmp-nvim-lsp"
[[plugins]]
repo = "hrsh7th/vim-vsnip"
