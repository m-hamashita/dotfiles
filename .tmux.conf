set-option -g default-shell '/usr/local/bin/fish'

# C-S-(Left|Right)でwindowの移動
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1

# option+h, lでwindowの移動
bind -n M-l next-window
bind -n M-h previous-window

# prefixキーをC-aに変更する
set -g prefix C-a
# C-bのキーバインドを解除する
unbind C-b
# キーストロークのディレイを減らす
set -sg escape-time 1
# C-a*2でtmux内のプログラムにC-aを送る( ssh 時によく使う)
bind C-a send-prefix
# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# 縦分割横分割
bind | split-window -h
bind - split-window -v

# ウィンドウ番号1から開始する
set-option -g base-index 1
# bind+y で全部コピー
bind y copy-mode

bind -n C-q run-shell "fish -c \"tmuxpopup\""

# マウスでスクロールできるようにする
# これを有効にすると、MacでCommand+Cなどができなくなるが、
# Optionを押しながら範囲選択すると、コピーできる。
# set-option -g mouse on

# ウィンドウ(タブ)を閉じた時、ウインドウ番号を付番をしなおす
# set-option -g renumber-windows on

# クリップボードにコピーする
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"


# コピーモードでコピーしたものをクリップボードに保存
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# Vim のキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペインのリサイズを vi 風にする
bind -r C-h resize-pane -L 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-l resize-pane -R 10

# tmux-resurrectの設定
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'


#自動で保存したり
set -g @tpm_plugins '                \
  tmux-plugins/tpm                   \
  tmux-plugins/tmux-yank             \
  tmux-plugins/tmux-open             \
  tmux-plugins/tmux-resurrect        \
  tmux-plugins/tmux-battery          \
  tmux-plugins/tmux-pain-control     \
  tmux-plugins/tmux-continuum        \
  tmux-plugins/tmux-prefix-highlight \
'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'ssh'

#===================================
# Auto start tmux and restore
#===================================

# auto start terminal
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# auto restore tmux
set -g @continuum-restore 'on'
set -g @continuum-save-interval '60'


run-shell '~/.tmux/plugins/tpm/tpm'


#===================================
# ステータスバーの見た目
#===================================

# 色コード: http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html

# ステータスバーの色
# set -g status-fg colour253

# tmux powerline
# $ git clone https://github.com/erikw/tmux-powerline.git
# $ git clone https://github.com/abertsch/Menlo-for-Powerline
# $ pip install powerline-status
# $ menlo for powerline
# run-shell "powerline-daemon -q"
# source "~/.local/pipx/venvs/powerline-status/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf"
# 256色サポート
# tmuxをした時にpromptに色を付けるため
# set-option -g default-terminal screen-256color
# set -g terminal-overrides 'xterm:colors=256'


# ステータスバーの位置
set-option -g status-position top

# ステータスバー右隅に出すもの
set -g status-right ''
# set-option -g status-right '[%Y-%m-%d(%a) %H:%M]'
# set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

## COLORSCHEME: gruvbox dark (medium)
# https://github.com/egel/tmux-gruvbox/blob/3f9e38d7243179730b419b5bfafb4e22b0a969ad/tmux-gruvbox-dark.conf
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[bg=colour237,fg=colour253] #S "
set-option -g status-right ""

set-window-option -g window-status-current-format "#[bg=#A6A580,fg=colour237,nobold,noitalics,nounderscore] #[bg=#A6A580,fg=colour239]#I #[bg=#A6A580,fg=#333333,bold] #W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=#A6A580,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#[bg=colour237,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour237,fg=colour223] #I #[bg=colour237,fg=colour223] #W #[bg=colour237,fg=colour237,noitalics]"

# vim: set ft=tmux tw=0 nowrap:
# =================================
